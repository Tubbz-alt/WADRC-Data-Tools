<%   v_y_n = {"Y"=>"Y","N"=>"N"}%>


<%= form_for(@cg_tn, :html => {:multipart => true}) do |f| %>
  <% if @cg_tn.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@cg_tn.errors.count, "error") %> prohibited this cg_tn from being saved:</h2>

      <ul>
      <% @cg_tn.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :tn %>:     <%= f.text_field :tn %>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
   <%= f.label :common_name %>:     <%= f.text_field :common_name %>
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
   <%= f.label :table_contact_owner%>:     <%= f.text_field :contact_owner_table %>
  </div><BR>
  <div class="field">
    <%= f.label :join_left %><br />
    <%= f.text_field :join_left ,:size=>100 %>
  </div><BR>
	  <div class="field">
	    <%= f.label :left_join_parent_table %><br />
	    <%= f.text_field :join_left_parent_tn ,:size=>50 %>
	  </div><BR>
  <div class="field">
    <%= f.label :join_right %><br />
    <%= f.text_field :join_right ,:size=>100 %><br>
[appointment_type is not null] could be edited to [appointment_type = 'mri'] or [appointment_type = 'pet_scan']
  </div><BR>
  <div class="field">
	<table><tr><td>
    <%= f.label :display_order %>:    <%= f.number_field :display_order ,:SIZE=> 15,:onchange => "if ( isNaN(this.value)){alert('The field needs to be all numeric.');this.value =''}"%>
 </td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
    <%= f.label :table_type %>: 

  <%= collection_select 'cg_tn', :table_type, CgTableType.where(" status_flag ='Y' ").all.sort_by(&:table_type), :table_type, :table_type, :prompt => 'Select table types',:value => @cg_tn.table_type %>
 </td><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
					    <%= f.label :status_active %>: 
						<%= f.select :status_flag, options_for_select(v_y_n, @cg_tn.status_flag),
							              {:prompt => 'Select table status'}  %>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
						    <%= f.label :table_editable %>: 
							<%= f.select :editable_flag, options_for_select(v_y_n, @cg_tn.editable_flag),
								              {:prompt => 'Select editable'}  %>	
                              &nbsp;&nbsp;&nbsp; 
              <%= f.label :secondary_key_flag %>: 
            <%= f.select :secondary_key_flag, options_for_select(v_y_n, @cg_tn.secondary_key_flag),
                            {:prompt => 'Select secondary_key_flag'}  %>	
      </td></tr>
      <tr><td colspan="3">
                            <B>The secondary key flag expects the table to have a column called [secondary_key]. The tables are joined on secondary_key, which might make an inner join behave outer joinish.</b> 
                            <br> Related issues are columns which are flaged as match_mri_path_flag ( trys to eliminate duplicates from dual enrollments), secondary_key_protocol_flag and secondary_key_visitno_flag ( for joining the UP protocol tables ). Getting rid of the multiple rows in the search joins without lossing rows to an inner join is a PROBLEM.
 </td></tr></table>
 <table><tr><td><%= f.label :tracker_type %>:
 	<%= collection_select('cg_tn', :tracker_id,Trtype.where("status_flag ='Y' ").order(:description), :id, :description,  {:prompt => 'Choose tracker if table type is tracker'}, {:multiple =>  false} ) %>
 </td></tr>
 <tr><td><%= f.label :view_tn_participant_link %>:
  <%= f.text_field :view_tn_participant_link ,:size=>50 %><br>
  Enter if the cg_table is actually a View, of a table which has Participant_id - important for changing participant_id when merging participants - ignore enrollments, vgroups, participants - already being merged.
 </td></tr>
</table>
</div>
<br>
<br>
<B>Owner:</b></td></tr>
	</table>
	<table width="60%">
		<tr><td>
<div id="scan_procedure_list">
<ul>
<% User.where(" users.username not like '%left%' ").all.sort_by(&:username_name).each do |user| %>
	<li>
		<%#= f.fields_for scan_procedure do |scan_fields| %>
			<%#= f.check_box :scan_procedure_ids, {}, scan_procedure.id, :name => 'visit[scan_procedure_ids][]' %>
			<%#= f.label :scan_procedure_ids, scan_procedure.codename %>
		<%# end %>
	</li>
	<li>
		<%= check_box_tag "cg_tn_user_ids", user.id, @cg_tn.users.include?(user), :name => 'cg_tn[user_ids][]' %>
		<%= label_tag '', user.username_name %>
	</li>
<% end %>
</ul>
</div>
</td><td valign="top"><%= f.label :datadictionary, 'Upload data dictionary'%>: <%= f.file_field :datadictionary %> 
	<br> <% if !@cg_tn.datadictionary_file_name.blank?%><small><small><%= link_to 'Download DataDictionary', @cg_tn.datadictionary.url %> <%= @cg_tn.datadictionary_file_name%></small> -Careful not to update cg_tns and lose the data dictionary.</small><%end%>
	</td></tr>
<tr><td></td><td valign="top"><%= f.label :datadictionary2, 'Upload data dictionary/explanatory file'%>: <%= f.file_field :datadictionary2 %> 
  <br> <% if !@cg_tn.datadictionary2_file_name.blank?%><small><small><%= link_to 'Download DataDictionary/Expanatory File', @cg_tn.datadictionary2.url %> <%= @cg_tn.datadictionary2_file_name%></small> -Careful not to update cg_tns and lose the data dictionary.</small><%end%>
  </td></tr>
	<tr><td>The data dictionary can ONLY be a *.pdf or a *.xls or a *.zip file. </td></tr></table>
  <div class="actions">
    <%= f.submit %>
  </div><br>
<% end %>


