<% @current_tab = "searches" 
# order list of default open tables
# columns , if search able column, what is the search able field - text field first -- dropdowns
# dropdown of =, >,<, !=, between
# other search fields like current search - sp, rmr, enum

#    join element
# will store in table, first use array and hash
# include all columns option at table  +/-
# for export
# apply access control

# inner or outer join

# output to one file --- ? multiple rows
# output to worksheets option -- sheet for each table -- always with vg_tables


# ordered list of expand/collapse table -- will the form elements still be there when collapsed?
# query db to get list of column_group table  - vg_"some_name"_vg_run_id
# or query vg_run table --- active status

# save query - base_flag ==> unchangeable
# track last time run
# save query - editable by creator, 
# others can use, save as own 
# base at top of drop down query list
# then current query
# then old, unrun query

# pass in string of enum to search 
# need to save, recover search  -- set default in drop down if no saved search values

v_join_type_hash =[['Inner','0'],['Outer','1']]
v_conditions_hash = [['=','0'],['>=','1'],['<=','2'],['!=','3'],['is blank','5'],['is not blank','6'],['contains','7']]
v_conditions_between_hash = [['=','0'],['>=','1'],['<=','2'],['!=','3'],['between','4'],['is blank','5'],['is not blank','6'],['contains','7']]

# make array of tn_id from cg add table
# @add_cg_tn_id = [] initalized in controller, populated from stored query also

if !params[:cg_search].blank? and !params[:cg_search][:add_cg_tn_id].blank? 
  params[:cg_search][:add_cg_tn_id].each do |add_cg_tn_id|
    v_add_cg_tn_id = add_cg_tn_id.to_s
    if (!params[:cg_search][:include_add_cg_tn].blank? and !params[:cg_search][:include_add_cg_tn][v_add_cg_tn_id].blank?)
	   @add_cg_tn_id.push(v_add_cg_tn_id)
	end
  end	
end
@add_cg_tns = CgTn.where("table_type='column_group' and status_flag='Y'")
@cg_tn = CgTn.where("(table_type='base' and status_flag='Y') or id in (?) or id in (?)",@add_cg_tn_id, @cg_query_tn_id_array).order(:id)
# how to order
v_tn_cn_hash =[]
v_tn_cn_searchable_hash = []

%>

<table  width="100%" ><tr ><td>&nbsp;</td><td width="20%" nowrap align="right" bgcolor="CFCFCF"><table border="1"><tr><td  >
	<%= form_for 'cg_search' do |f| %>
	 <small><%= f.label :select_saved_search%>:</small> 

	<%= f.select( :cg_query_id, @data_for_select_stored_search,{:include_blank => 'Select a stored search'} ) %>
	<%= f.submit("Retrieve stored query")%>
	<% end %>
	</td></tr></table>
</td></tr>
<% if !params[:cg_search].blank? and !@table_types.blank? and !@table_types.index('base').blank?%>
<tr><td align="center" colspan=2>
	<%= form_tag '/cg_search.xls' do%>
	    <% v_link_to_elements = (link_to '/cg_search.xls', { :controller=>"data_searches", :action=>"cg_search", :cg_search =>  params[:cg_search] , :format => :xls, :method => :post}) %>
	    <%  v_link_to_elements = v_link_to_elements.gsub(/<a href="\/cg_search.xls\?/,'') 
	        v_link_to_elements = v_link_to_elements.gsub(/&amp;method=post">download xls<\/a>/,'')
	            # trying to trim the empty &'s
	             v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'') 
	             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
	             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
	             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
	             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;').gsub(/%5B/,'[').gsub(/%5D/,']')
	     #        v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'') 
	     #        v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'')
	        v_link_array =[]
	        v_link_array = v_link_to_elements.split("\&amp\;") 
	        v_link_array.each do |v| 
	            v_name = ""
	            v_val =""
		        (v_name,v_val) = v.split('=')%>
				<%   if v_name == "cg_search[enumber]"   %>
			      <%= hidden_field_tag v_name, v_val.gsub(/\%2C/,",").gsub(/\%27/,"").gsub(/\+/,"") %>
			    <% else %>	
	              <%= hidden_field_tag v_name, v_val && v_val.gsub(/\%2F/,"/").gsub(/\+/," ") %>
	            <% end %>
	       <% end %>
	      <%= submit_tag 'export file'%>
	<% end %>
	</td></tr>
	<% end %>
<table>	

<%= form_for  'cg_search' do |f| %>

<table class="search_form">
	<tr><td><%= f.label :scan_procedures %><br>
	<div id="scan_procedure_list">
	<ul>
	<% ScanProcedure.where(" scan_procedures.id in (select scan_procedure_id from scan_procedures_vgroups where  scan_procedure_id in (?))",   (current_user.view_low_scan_procedure_array).split(' ').map(&:to_i) ).all.sort_by(&:codename).each do |scan_procedure| %>
		<li>
			<%#= f.fields_for scan_procedure do |scan_fields| %>
				<%#= f.check_box :scan_procedure_ids, {}, scan_procedure.id, :name => 'visit[scan_procedure_ids][]' %>
				<%#= f.label :scan_procedure_ids, scan_procedure.codename %>
			<%# end %>
		</li>
		<li>
			<% if @sp_array.include?(scan_procedure.id.to_s)%>
			   <%= check_box_tag "vgroup_scan_procedure_ids", scan_procedure.id,TRUE , :name => 'cg_search[scan_procedure_id][]' %>
			<% else %>
			   <%= check_box_tag "vgroup_scan_procedure_ids", scan_procedure.id,FALSE , :name => 'cg_search[scan_procedure_id][]' %>
			<% end %>
			<%= label_tag '', scan_procedure.codename %>
		</li>
	<% end %>
	</ul>
	</div>

	  </td></tr></table>

<!-- visits/find.html.erb has a nice checkbox -- from some metasearch plugin?  -->
  <table class="search_form">

    <tr>
      <th><%= f.label :enumber %></th>
      <td><% if !params[:cg_search].blank? and !params[:cg_search][:enumber].blank? and params[:cg_search][:enumber].size > 20  %>
	             <%= text_area  :cg_search, :enumber, :value => @cg_query.enumber, :cols => 30, :rows => 4 %>
	       <% else %>
               <%= text_field  :cg_search,:enumber, :value => @cg_query.enumber %>
           <% end %></td>
    </tr>

    <tr>
      <th>RMR</th>
      <td><%= text_field  :cg_search, :rmr ,:value => @cg_query.rmr %></td>
    </tr>
    <tr>
      <th><%= f.label :gender %></th>
      <td><%= select :cg_search, :gender, { "M" => 1, "F" => 2 }, :selected =>@cg_query.gender.to_i , :include_blank => true %></td>
    </tr>
    <tr>
      <th><%= f.label :minimum_age %></th>
      <td><%= select :cg_search, :min_age, (1..110).to_a, :selected =>@cg_query.min_age.to_i ,:include_blank => true %><small> (the age at visit) </small></td>
    </tr>
    <tr>
      <th><%= f.label :maximum_age %></th>
      <td><%= select :cg_search, :max_age, (1..110).to_a, :selected =>@cg_query.max_age.to_i , :include_blank => true %></td>
    </tr>
		<% # limit on url length? take link, parse to form hidden elementas link_to 'download xls', { :controller=>"data_searches", :action=>"cg_search", :cg_search =>  params[:cg_search] , :format => :xls, :method => :post}  %> 

  </table>


  <table class="search_form">
    <tr>
      <th colspan="2" align="right"><%= f.label :Stored_Search %>&nbsp;&nbsp;&nbsp;
      <%= select :cg_search, :save_flag, { "Y" => "Y", "Inactivate" => "N" },:selected =>@cg_query.save_flag %></th>
    </tr>
    <tr>
      <th colspan="2" align="right"><%= f.label :Save_search_as %>&nbsp;&nbsp;&nbsp;
      <%= text_field :cg_search, :cg_name, :value => @cg_query.cg_name, :size => 20 %></th>
    </tr>
    <tr>
      <th colspan="2" align="right"><%= f.label :save_search %>&nbsp;&nbsp;&nbsp;
      <%= check_box( :cg_search, "save_search")%></th>
    </tr>
    <tr>
      <th colspan="2" align="right">&nbsp;&nbsp;&nbsp;</th>
	</tr>
    <tr>
      <th></th>
      <td><%= f.submit("run search")%>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small><%= link_to "Clear Search", '/cg_search?clear_all=Y'%></small>
	<% if @add_cg_tns.size > 0 %>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BIG><B><%= link_to "Add tables", '/cg_tables'%></B></BIG>
	<% end %>
	   <% if !params[:cg_search].blank? and !@table_types.blank? and !@table_types.index('base').blank?%><br>
	<a href="#view_results">View Results</a> (<%= pluralize(@results_total.size, 'Result') %>)
       <% end %>
      
	 </td>
    </tr>
  </table>
  <%= clearing_br %>
<br>
<% # make hidden fields to propagate the added cg tables
@add_cg_tn_id.each do |add_cg| %>

<%= hidden_field :cg_search, 'add_cg_tn_id][', :value=>add_cg  %>
<%= hidden_field :cg_search, 'include_add_cg_tn]['+add_cg  , :value=>"1"%>

<% end
%>
<table  width="90%"><tr><th width="50"><small><small>Include</small></small></th><th  nowrap>Table/Column Name 
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<small><small>Search By</small></small>&nbsp;<small><small>/</small></small>&nbsp;<small><small>Condition</small></small></th><th width="50"><small><small>Join Type</small></small></th>
	<th width="100">&nbsp;</th><th width="50"><small><small></small></small></th><th width="50">&nbsp;</th></tr>
	<% v_cg_query_id = ""
	    if !params[:cg_search].blank? and !params[:cg_search][:cg_query_id].blank? 
		   v_cg_query_id =params[:cg_search][:cg_query_id]
		end %>
	<%= hidden_field :cg_search, :stored_cg_query_id, :value=>v_cg_query_id  %>
     <%    @cg_tn.each do |tn| %>
             <% @cg_query_tn = @cg_query_tn_hash[tn.id.to_s]
             if !@cg_query_tn.blank? 
                 v_join_type =@cg_query_tn.join_type	
             end
              v_include_tn = "FALSE"   
             if !@cg_query_tn.blank?  and  @cg_query_tn.include_tn == 1   
                v_include_tn = "TRUE"          
	          end
                %>
<% if tn.common_name == "Pet Appointments"%>
<tr><td colspan="5">Pick tracer(s):
	
<%	LookupPettracer.all.sort_by(&:name).each do |tr| %>
		
			<% if @pet_tracer_array.include?(tr.id.to_s)%>
			   <%= check_box_tag "pet_tracer_ids", tr.id,TRUE , :name => 'cg_search[pet_tracer_id][]' %>
			<% else %>
			   <%= check_box_tag "pet_tracer_ids", tr.id,FALSE , :name => 'cg_search[pet_tracer_id][]' %>
			<% end %>
			<%= label_tag '', tr.name %>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<% end %>
	</td></tr>
<% end %>
             <tr><td><%= hidden_field(:cg_search, "tn_id][", :value=>tn.id.to_s) %>
  <%= check_box_tag "include_tns", "1", v_include_tn == "FALSE" ? FALSE : TRUE , :name => "cg_search[include_tn]["+tn.id.to_s+"]", :onclick =>"checkbox_cascade(this,'"+tn.id.to_s+"')"%></td>
	     <td><%= (tn.common_name).html_safe %> <!-- <%= "("+tn.tn+")" %> --> </td>
	                      <td> 
	                    <% if !tn.join_left.blank?%>
	                       <%= select  :cg_search,"join_type]["+tn.id.to_s, options_for_select(v_join_type_hash, v_join_type  ),
							              {:prompt => 'Select join type'}  %>
					    <% else%>
					                  <%= hidden_field_tag 'cg_search[join_type]['+tn.id.to_s+']','0'%>
					    <% end %>		
							</td><td>&nbsp;</td><td><% if !tn.datadictionary_file_name.blank?%>
							<small><small><%= link_to 'DataDictionary', tn.datadictionary.url %></small></small>
							<% end %></td><td>&nbsp;
								
											<a id="myHeader1" href="javascript:toggle2_closed('tn_<%=tn.id.to_s%>','myHeader2');" ><small><small>expand/collapse</small></small></a>
											   </td></tr>
<tr><td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td><td colspan="6">
	<div id="tn_<%=tn.id.to_s %>"  >
		<table>
			
              <% @cg_tn_cn = CgTnCn.where("cg_tn_id ="+tn.id.to_s+" and status_flag= 'Y'").order("display_order")
                 @cg_query_cn_hash = @cg_query_tn_cn_hash[tn.id.to_s] 
                 @cg_tn_cn.each do |cn|  
	                v_include_cn = "FALSE" 
	                v_value_1 =""
	                v_value_2 =""
	                v_condition = ""
	                @cg_query_tn_cn = nil
	                if !@cg_query_cn_hash.blank?
	                    @cg_query_tn_cn = @cg_query_cn_hash[cn.id.to_s]
	                    if !@cg_query_tn_cn.blank?
		                   if @cg_query_tn_cn.include_cn == 1
 		                       v_include_cn = "TRUE"
                           end
		                   v_value_1 = @cg_query_tn_cn.value_1       # NEEDD ALL THE REST OF THE FORMATS OTHER THAN TEXT
		                                                             # NEED VALUES IN SEARCH WHEN CN not checked?
		                   v_value_2 = @cg_query_tn_cn.value_2
		                   v_condition = @cg_query_tn_cn.condition
		                end 
	                end
	                %> 
	                  <tr><td>
		<%= hidden_field(:cg_search, "cn_id]["+tn.id.to_s+"][", :value=>cn.id.to_s) %>
		<%= check_box_tag "include_cns"+cn.id.to_s, "1", v_include_cn == "FALSE" ? FALSE : TRUE , :name => "cg_search[include_cn]["+tn.id.to_s+"]["+cn.id.to_s+"]" %></td>
		<td nowrap>&nbsp;&nbsp;&nbsp;<%= (cn.common_name).html_safe %><!-- <%=  "("+cn.cn+")"  %> --></td>
		<% if cn.searchable_flag == "Y"  
			   if !cn.ref_table_b.blank?%>
				<td><%= collection_select "cg_search[value_1]["+tn.id.to_s+"]",cn.id.to_s, LookupRef.where("label = ?",cn.ref_table_b).sort_by(&:display_order),
			    	:ref_value, :description, {:include_blank => "Select a value",:selected => v_value_1}%> <!-- #,:selected => (@q_data.value_1 or @question.default_val_1)} --></td>
			      <% if cn.condition_between_flag == "Y" %>
						<td><%= collection_select "cg_search[value_2]["+tn.id.to_s+"]",cn.id.to_s, LookupRef.where("label = ?",cn.ref_table_b).sort_by(&:display_order),
					    	:ref_value, :description, {:include_blank => "Select a value",:selected =>v_value_2}%> <!-- #,:selected => (@q_data.value_2 or @question.default_val_2)} --></td>
			      <% else %>
			            <td>&nbsp;</td>
			      <% end %>
			   <% elsif !cn.ref_table_a.blank?%>
				<td><%= collection_select "cg_search", "value_1]["+tn.id.to_s+"]["+cn.id.to_s, ((cn.ref_table_a).constantize).where("trim(description) != ''").sort_by(&:description),:id, :description , {:include_blank => "Select a value",:selected =>v_value_1}  %>
				<!--,:selected => (@q_data.value_1 or @question.default_val_1)} --></td>
				   <% if cn.condition_between_flag == "Y" %>
						<td> <%= collection_select "cg_search", "value_2]["+tn.id.to_s+"]["+cn.id.to_s, ((cn.ref_table_a).constantize).where("trim(description) != ''").sort_by(&:description),
					    	:id, :description, {:include_blank => "Select a value", :selected =>v_value_2} %> 
					<!--,:selected => (@q_data.value_2 or @question.default_val_1)} --></td>		
			      <% else %>
			            <td>&nbsp;</td>
			      <% end %>
			    <% elsif !cn.value_list.blank?
					      v_value_list_array =  cn.value_list.split("|")
					      v_value_list = {}
					      v_value_list_array.each do |v|
						     v_value_list[v]=v
						  end
					%>
					<td><%= select  :cg_search, "value_1]["+tn.id.to_s+"]["+cn.id.to_s, options_for_select(v_value_list,v_value_1),
										{:prompt => 'Select a value'}  %>
						<!--,:selected => (@q_data.value_1 or @question.default_val_1)} --></td>
					  <% if cn.condition_between_flag == "Y" %>
							<td> <%= select  :cg_search, "value_2]["+tn.id.to_s+"]["+cn.id.to_s, options_for_select(v_value_list,v_value_2),
												{:prompt => 'Select a value'}  %>
							<!--,:selected => (@q_data.value_2 or @question.default_val_1)} --></td>		
					  <% else %>
					            <td>&nbsp;</td>
					   <% end %>
            
			   <% elsif !cn.data_type.blank? and cn.data_type == "date"%>
			       <%   if !v_value_1.blank?   # NEEDD THE v_value_1_2 to populate the date_select-- problem with not being a model date object
			          v_date_1_array = v_value_1.split('-') 
			          @start_year = 1995
					   @base_name ="value_1]["+tn.id.to_s+"]["+cn.id.to_s
					   @form_name ="cg_search"
					   @default_value =""
					   @select_value = v_date_1_array
			         %>
				  <td nowrap>
				<%= 	render :partial => 'date_select_no_linked_model' ,:locals => {} %>
				<!-- = date_select  :cg_search,"value_1]["+tn.id.to_s+"]["+cn.id.to_s, :start_year => 1995,  :class => 'date-field',:default=>v_date_1_array, :include_blank => true  --></td>
				    <% else %>
				  <td nowrap>	 
				<%= date_select  :cg_search,"value_1]["+tn.id.to_s+"]["+cn.id.to_s, :start_year => 1995, :include_blank => true %></td>
				    <% end %>
				   <% if cn.condition_between_flag == "Y" %>
				  <%   if !v_value_2.blank?
			            v_date_2_array = v_value_2.split('-') 
			            @start_year = 1995
						@base_name ="value_2]["+tn.id.to_s+"]["+cn.id.to_s
						@form_name ="cg_search"
						@default_value =""
						@select_value = v_date_2_array
			            %>
					    <td nowrap> &nbsp;&nbsp;&nbsp;<%= 	render :partial => 'date_select_no_linked_model' ,:locals => {} %>
					<!-- >= date_select  :cg_search,"value_2]["+tn.id.to_s+"]["+cn.id.to_s,:start_year => 1995, :include_blank => true --> &nbsp;&nbsp;&nbsp;
					  <%else%>
					    <td nowrap> &nbsp;&nbsp;&nbsp;<%= date_select  :cg_search,"value_2]["+tn.id.to_s+"]["+cn.id.to_s,:start_year => 1995, :include_blank => true %> &nbsp;&nbsp;&nbsp;
					  <%end%>
				   </td>		
			      <% else %>
			            <td>&nbsp;</td>
			      <% end %>
			   <% else%>  
			       <% if !cn.data_type.blank? and (cn.data_type == "integer" or cn.data_type == "float")%>
		             <td nowrap><%= text_field :cg_search,"value_1]["+tn.id.to_s+"]["+cn.id.to_s, :value=>v_value_1,:size => 20,:onchange => "if ( isNaN(this.value)){alert('The field needs to be all numeric.');this.value =''}" %></td>
		             <% if cn.condition_between_flag == "Y" %>
		                   <td ><%= text_field :cg_search,"value_2]["+tn.id.to_s+"]["+cn.id.to_s,:value=>v_value_2, :size => 20,:onchange => "if ( isNaN(this.value)){alert('The field needs to be all numeric.');this.value =''}" %></td>		
                    <% else %>
                         <td>&nbsp;</td>
                     <% end %>			
			       <% else %>
		             <td nowrap><%= text_field :cg_search,"value_1]["+tn.id.to_s+"]["+cn.id.to_s,:value=>v_value_1, :size => 20 %></td>
		             <% if cn.condition_between_flag == "Y" %>
		                   <td ><%= text_field :cg_search,"value_2]["+tn.id.to_s+"]["+cn.id.to_s, :value=>v_value_2, :size => 20 %></td>		
                      <% else %>
                           <td>&nbsp;</td>
                       <% end %>
                   <% end %>
		       <% end %>
		<td><% if cn.condition_between_flag == "Y" %>	
		       <%= select  :cg_search, "condition]["+tn.id.to_s+"]["+cn.id.to_s, options_for_select(v_conditions_between_hash, v_condition),
							              {:prompt => 'Select conditions'}  %>
			<% else %>
			    <%= select  :cg_search, "condition]["+tn.id.to_s+"]["+cn.id.to_s, options_for_select(v_conditions_hash, v_condition),
															              {:prompt => 'Select conditions'}  %>	
			 <% end %>			
							</td></tr>
<%       else %>
          <td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr>

<%       end 
 	              end %>
</table>
</div>
</td></tr>  

<% if tn.common_name == "Mri Appointments"    
	v_category = ""
	if !params[:cg_search].blank? and !params[:cg_search][:series_description_type_id].blank?
	   v_category = params[:cg_search][:series_description_type_id]
	end
	v_join_type_ids = ""
	if !params[:cg_search].blank? and !params[:cg_search][:join_type].blank?  and !params[:cg_search][:join_type][@image_datasets_tn[0].id.to_s].blank?
	   v_join_type_ids = params[:cg_search][:join_type][@image_datasets_tn[0].id.to_s]
	end
	          %> 
    <tr><td colspan="2" align="left">
    	<br>
     Select a Series Description Category:&nbsp;&nbsp;
<%= select(:cg_search, :series_description_type_id, SeriesDescriptionType.where("series_description_type not like '%?%'").sort_by(&:series_description_type).collect {|p| [ p.series_description_type, p.id ] },  { :include_blank => "Select a category",:selected => v_category }) %><br>

    <small> The image dataset fields will only show up in the <b>[ export file -image dataset ]. </b> </small>
    <br><br>
     </td><td colspan="5" align="left">	<%= select  :cg_search,"join_type]["+@image_datasets_tn[0].id.to_s, options_for_select(v_join_type_hash, v_join_type_ids  ),
			              {:prompt => 'Select join type'}  %> <br>&nbsp;&nbsp;&nbsp;<small>The series desc category inner join makes the query slow.</small>
    </td></tr>

<% end %>

	<tr><td colspan="7" align="right"><hr></td></tr>
<%          end %>
	<tr><td colspan="2" align="left" ><%= f.submit("run search")%></td><td colspan="4" align="right">&nbsp;</td><td width=2>
		<% if current_user.role == 'Admin_High' or current_user.role == 'Admin_Low' %>
		       <smal><small><%= popup_note('.', @sql ) unless @sql.to_s.blank? %></small></small>
		<% end %></td></tr>
<%     end
%>
</table>
<% if !params[:cg_search].blank? and !@table_types.blank? and !@table_types.index('base').blank?%>
<%= form_tag '/cg_search.xls' do%>
    <% v_link_to_elements = (link_to 'download xls', { :controller=>"data_searches", :action=>"cg_search", :cg_search =>  params[:cg_search] , :format => :xls, :method => :post}) %>
    <%   v_link_to_elements = v_link_to_elements.gsub(/<a href="\/cg_search.xls\?/,'') 
             v_link_to_elements = v_link_to_elements.gsub(/&amp;method=post">download xls<\/a>/,'')
            # trying to trim the empty &'s
             v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'') 
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;').gsub(/%5B/,'[').gsub(/%5D/,']')
     #        v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'') 
     #        v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'')   
        v_link_array =[]
        v_link_array = v_link_to_elements.split("\&amp\;") 
        v_link_array.each do |v| 
            v_name = ""
            v_val =""
	        (v_name,v_val) = v.split('=') %>
	     <%   if v_name == "cg_search[enumber]"   %>
	      <%= hidden_field_tag v_name, v_val.gsub(/\%2C/,",").gsub(/\%27/,"").gsub(/\+/,"") %>
	       <% else %>	
            <%= hidden_field_tag v_name, v_val && v_val.gsub(/\%2F/,"/").gsub(/\+/," ") %>	
           <% end %>
       <% end %>
      <%= submit_tag 'export file'%> 

<% end %>

<%= form_tag '/cg_search.xls' do%>
    <% v_link_to_elements = (link_to 'download xls', { :controller=>"data_searches", :action=>"cg_search", :cg_search =>  params[:cg_search] , :format => :xls, :method => :post}) %>
    <%= hidden_field_tag 'longitudinal','Y' %>
    <%   v_link_to_elements = v_link_to_elements.gsub(/<a href="\/cg_search.xls\?/,'') 
             v_link_to_elements = v_link_to_elements.gsub(/&amp;method=post">download xls<\/a>/,'')
            # trying to trim the empty &'s
             v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'') 
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;')
             v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'&amp;').gsub(/%5B/,'[').gsub(/%5D/,']')
     #        v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'') 
     #        v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'')   
        v_link_array =[]
        v_link_array = v_link_to_elements.split("\&amp\;") 
        v_link_array.each do |v| 
            v_name = ""
            v_val =""
	        (v_name,v_val) = v.split('=') %>
	     <%   if v_name == "cg_search[enumber]"   %>
	      <%= hidden_field_tag v_name, v_val.gsub(/\%2C/,",").gsub(/\%27/,"").gsub(/\+/,"") %>
	       <% else %>	
            <%= hidden_field_tag v_name, v_val && v_val.gsub(/\%2F/,"/").gsub(/\+/," ") %>	
           <% end %>
       <% end %>
      <%= submit_tag 'export longitudinal file'%>  

<% end %>


<% if !params[:cg_search].blank? and !params[:cg_search][:series_description_type_id].blank? %>
 <%= form_tag '/cg_search.xls' do%>
    <% v_link_to_elements = (link_to 'download xls', { :controller=>"data_searches", :action=>"cg_search", :cg_search =>  params[:cg_search] , :format => :xls, :method => :post}) %>
    <%  v_link_to_elements = v_link_to_elements.gsub(/<a href="\/cg_search.xls\?/,'') 
        v_link_to_elements = v_link_to_elements.gsub(/&amp;method=post">download xls<\/a>/,'')
        v_link_to_elements = v_link_to_elements.gsub(/&amp;&amp;/,'') 
        v_link_to_elements = v_link_to_elements.gsub(/^&amp;/,'').gsub(/%5B/,'[').gsub(/%5D/,']')   
        v_link_array =[]
        v_link_array = v_link_to_elements.split("\&amp\;") 
        v_link_array.each do |v| 
            v_name = ""
            v_val =""
	        (v_name,v_val) = v.split('=') %>
	     <%   if v_name == "cg_search[enumber]"   %>
	      <%= hidden_field_tag v_name, v_val.gsub(/\%2C/,",").gsub(/\%27/,"").gsub(/\+/,"") %>
	       <% else %>	
            <%= hidden_field_tag v_name, v_val && v_val.gsub(/\%2F/,"/").gsub(/\+/," ") %>	
           <% end %>
       <% end %>
      <%= hidden_field_tag  "cg_search[image_dataset_file]" , "image_dataset_file" %>
      <%= submit_tag 'image dataset export file'%>

 <% end %>
<% end %>

<br><br>
<span id="view_results">&nbsp;</span>

<table class="tabular">
  <caption><%= pluralize(@results_total.size, 'Result') %></caption>
  <thead>
	 <tr>
		<% @local_column_headers.each do |column_header|%>
	      <th><%= column_header%></th>
	    <% end %>	
	 </tr>
	<tfoot><tr><td colspan=<%= @local_column_headers.size %>>
		 <%= paginate @results %>
		
	</td></tr></tfoot>
		 <% @results.each do |result| %>
		    <%  vgroup = Vgroup.find(result[1])
		
		      #result.delete_at(@local_column_headers.size-1) # *.id used to get the * object, not want to display %>
			<tr>
			   <% for i in 0..@column_number-1  # results is an array of arrays%>
                 <% if i == 0 %>
                    <td><%= link_to vgroup.vgroup_date.to_s(:datetime_military), vgroup %></td>
                <% elsif i== 1%>
   <td><%= vgroup.blank? ? "None" : vgroup.scan_procedures.sort_by(&:codename).collect {|sp| link_to(sp.codename, '/vgroups/vgroups_search?vgroups_search[scan_procedure_id][id]='+sp.id.to_s)}.join(", ").html_safe %></td>
                <% elsif i== 2%>
<td><%= vgroup.blank? ? "" :vgroup.enrollments.collect {|e| link_to(e.enumber, e) }.join(", ").html_safe %></td>
                <% else %> 
			      <td><%= result[i] %></td>
                <% end %>
			   <% end %>
		    </tr>
		 <% end %>
	</table>


<% end %>

