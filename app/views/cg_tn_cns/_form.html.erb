<%  v_y_n = {"Y"=>"Y","N"=>"N"}
    v_data_type = {"integer"=>"integer","string"=>"string","date"=>"date","float"=>"float"}

%>

<%= form_for(@cg_tn_cn) do |f| %>
  <% if @cg_tn_cn.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@cg_tn_cn.errors.count, "error") %> prohibited this cg_tn_cn from being saved:</h2>

      <ul>
      <% @cg_tn_cn.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :cg_tn_id %>
     <%= collection_select :cg_tn_cn, :cg_tn_id, CgTn.all.sort_by(&:tn), :id, :tn,{:prompt => 'Select a Table'},{:required => true}  %>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

load next column? : <%= select_tag 'load_next_column', options_for_select(v_y_n, @load_next_column),
									              {:prompt => 'Load next column?'}  %>
									

  </div><br>
  <div class="field">
    <%= f.label :column_name %>: <%= f.text_field :cn %>
	
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <%= f.label :common_name %>:     <%= f.text_field :common_name %>
	
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <%= f.label :export_name %>:     <%= f.text_field :export_name %>
  </div><br>
  <div class="field">
    <%= f.label :key_column %>:  <%= f.select :key_column_flag, options_for_select(v_y_n, @cg_tn_cn.key_column_flag),
		              {:prompt => 'Select y/n column is part of key/id'}  %>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<%= f.label :searchable %>: <%= f.select :searchable_flag, options_for_select(v_y_n, @cg_tn_cn.searchable_flag),
					              {:prompt => 'Select y/n searchable'}  %>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<%= f.label :search_between %>: <%= f.select :condition_between_flag, options_for_select(v_y_n, @cg_tn_cn.condition_between_flag),
					{:prompt => 'Select y/n between searchable'}  %>		
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<%= f.label :data_type %>:
	<%= f.select :data_type, options_for_select(v_data_type, @cg_tn_cn.data_type),
	              {:prompt => 'Select column data type'}  %>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
   <%= f.label :active_status %>: <%= f.select :status_flag, options_for_select(v_y_n, @cg_tn_cn.status_flag),
                                  {:prompt => 'Select to order by column'}  %>  
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	 <%= f.label :order_by %>: <%= f.select :order_by_flag, options_for_select(v_y_n, @cg_tn_cn.order_by_flag),
										              {:prompt => 'Select to order by column'}  %>	
			
  </div><br>

 <div class="field">
    <%= f.label :display_order %>:
    <%= f.text_field :display_order ,:size=>15 ,:onchange => "if ( isNaN(this.value)){alert('The field needs to be all numeric.');this.value =''}"%>	
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <%= f.label :value_limits %>: 
    <%= f.text_field :value_limits %>
	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	    <%= f.label :value_list %>: 
	    <%= f.text_field :value_list %> <small>(e.g. yes|no|n/a   "|", pipe as divider)</small>
  </div>
<br>
  <div class="field">
    <%= f.label :ref_table_a %>: 
    <%= f.text_field :ref_table_a %> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <small> e.g. LOOKUP_REFS ( plus a ref_table_b value), or camel case model nameLookupGender</small>
  </div>
  <div class="field">
    <%= f.label :ref_table_b %>: 
    <%= f.text_field :ref_table_b %>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	<%= f.label :q_data_form_id %>: 
    <%= f.text_field :q_data_form_id %>
  </div><br>
  <div class="field">
    <%= f.label :hide_column %>:  <%= f.select :hide_column_flag, options_for_select(v_y_n, @cg_tn_cn.hide_column_flag),
                  {:prompt => 'Select y/n column to hide in UP'}  %>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <%= f.label :match_mri_path %>: <%= f.select :match_mri_path_flag, options_for_select(v_y_n, @cg_tn_cn.match_mri_path_flag),
                        {:prompt => 'Select y/n match mri path'}  %>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    <b>UP protocol related join:</b>&nbsp;&nbsp;&nbsp;
      <%= f.label :secondary_key_protocol_flag %>: <%= f.select :secondary_key_protocol_flag, options_for_select(v_y_n, @cg_tn_cn.secondary_key_protocol_flag),
                        {:prompt => 'Select y/n match on protocol columns'}  %>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      <%= f.label :secondary_key_visitno_flag %>: <%= f.select :secondary_key_visitno_flag, options_for_select(v_y_n, @cg_tn_cn.secondary_key_visitno_flag),
                        {:prompt => 'Select y/n match on visitno columns'}  %>
    &nbsp;&nbsp;&nbsp;<br>
    <%= f.label :dashboard_edit_flag %>:  <%= f.select :dashboard_edit_flag, options_for_select(v_y_n, @cg_tn_cn.dashboard_edit_flag),
                  {:prompt => 'Select y/n make column editable in Dashboard edit'}  %> 
  </div>
<br>
match_mri_path_flag ( trys to eliminate duplicates from dual enrollments), secondary_key_protocol_flag and secondary_key_visitno_flag ( for joining the UP protocol tables ). Getting rid of the multiple rows in the search joins without lossing rows to an inner join is a PROBLEM.
<br>

  <div class="actions">
    <%= f.submit %>
  </div><br>
<% end %>
Enter the name of the first column (e.g. subjectid, reggieid_kc, wrapnum_kc, adrcnum_kc), set "load next column? "== Y, enter rest of fields.<br>
Subjectid-v# column maps to enrollment and scan_procedure, and is the key column=Y,<br>
or  [ reggieid_kc, wrapnum_kc, adrcnum_kc ]  column maps to participant<br> and is the key_column=Y.<br><br>
After the first column, many of the fields will auto-populate.<br>
Display order will auto-increment.<br>
Common value lists include <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ Y|N ]  = yes, no   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ Y|N|R ] = yes, no, run   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ Pass|Fail|Partial ] for quality columns <br>
Large text fields are generally not searchable.<br>
Most fields have "Search Between" = N. <br>
Ref Table a will be the model name in camel case for a reference table, <br>
or == LOOKUP_REFS plus the identifying "label" for the set of reference rows.<br>




