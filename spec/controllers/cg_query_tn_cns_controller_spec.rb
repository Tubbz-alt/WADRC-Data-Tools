require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe CgQueryTnCnsController do

  def mock_cg_query_tn_cn(stubs={})
    @mock_cg_query_tn_cn ||= mock_model(CgQueryTnCn, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all cg_query_tn_cns as @cg_query_tn_cns" do
      CgQueryTnCn.stub(:all) { [mock_cg_query_tn_cn] }
      get :index
      assigns(:cg_query_tn_cns).should eq([mock_cg_query_tn_cn])
    end
  end

  describe "GET show" do
    it "assigns the requested cg_query_tn_cn as @cg_query_tn_cn" do
      CgQueryTnCn.stub(:find).with("37") { mock_cg_query_tn_cn }
      get :show, :id => "37"
      assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
    end
  end

  describe "GET new" do
    it "assigns a new cg_query_tn_cn as @cg_query_tn_cn" do
      CgQueryTnCn.stub(:new) { mock_cg_query_tn_cn }
      get :new
      assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
    end
  end

  describe "GET edit" do
    it "assigns the requested cg_query_tn_cn as @cg_query_tn_cn" do
      CgQueryTnCn.stub(:find).with("37") { mock_cg_query_tn_cn }
      get :edit, :id => "37"
      assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created cg_query_tn_cn as @cg_query_tn_cn" do
        CgQueryTnCn.stub(:new).with({'these' => 'params'}) { mock_cg_query_tn_cn(:save => true) }
        post :create, :cg_query_tn_cn => {'these' => 'params'}
        assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
      end

      it "redirects to the created cg_query_tn_cn" do
        CgQueryTnCn.stub(:new) { mock_cg_query_tn_cn(:save => true) }
        post :create, :cg_query_tn_cn => {}
        response.should redirect_to(cg_query_tn_cn_url(mock_cg_query_tn_cn))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved cg_query_tn_cn as @cg_query_tn_cn" do
        CgQueryTnCn.stub(:new).with({'these' => 'params'}) { mock_cg_query_tn_cn(:save => false) }
        post :create, :cg_query_tn_cn => {'these' => 'params'}
        assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
      end

      it "re-renders the 'new' template" do
        CgQueryTnCn.stub(:new) { mock_cg_query_tn_cn(:save => false) }
        post :create, :cg_query_tn_cn => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested cg_query_tn_cn" do
        CgQueryTnCn.stub(:find).with("37") { mock_cg_query_tn_cn }
        mock_cg_query_tn_cn.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :cg_query_tn_cn => {'these' => 'params'}
      end

      it "assigns the requested cg_query_tn_cn as @cg_query_tn_cn" do
        CgQueryTnCn.stub(:find) { mock_cg_query_tn_cn(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
      end

      it "redirects to the cg_query_tn_cn" do
        CgQueryTnCn.stub(:find) { mock_cg_query_tn_cn(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(cg_query_tn_cn_url(mock_cg_query_tn_cn))
      end
    end

    describe "with invalid params" do
      it "assigns the cg_query_tn_cn as @cg_query_tn_cn" do
        CgQueryTnCn.stub(:find) { mock_cg_query_tn_cn(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:cg_query_tn_cn).should be(mock_cg_query_tn_cn)
      end

      it "re-renders the 'edit' template" do
        CgQueryTnCn.stub(:find) { mock_cg_query_tn_cn(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested cg_query_tn_cn" do
      CgQueryTnCn.stub(:find).with("37") { mock_cg_query_tn_cn }
      mock_cg_query_tn_cn.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the cg_query_tn_cns list" do
      CgQueryTnCn.stub(:find) { mock_cg_query_tn_cn }
      delete :destroy, :id => "1"
      response.should redirect_to(cg_query_tn_cns_url)
    end
  end

end
