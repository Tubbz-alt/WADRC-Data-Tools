require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe QuestionScanProceduresController do

  def mock_question_scan_procedure(stubs={})
    @mock_question_scan_procedure ||= mock_model(QuestionScanProcedure, stubs).as_null_object
  end

  describe "GET index" do
    it "assigns all question_scan_procedures as @question_scan_procedures" do
      QuestionScanProcedure.stub(:all) { [mock_question_scan_procedure] }
      get :index
      assigns(:question_scan_procedures).should eq([mock_question_scan_procedure])
    end
  end

  describe "GET show" do
    it "assigns the requested question_scan_procedure as @question_scan_procedure" do
      QuestionScanProcedure.stub(:find).with("37") { mock_question_scan_procedure }
      get :show, :id => "37"
      assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
    end
  end

  describe "GET new" do
    it "assigns a new question_scan_procedure as @question_scan_procedure" do
      QuestionScanProcedure.stub(:new) { mock_question_scan_procedure }
      get :new
      assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
    end
  end

  describe "GET edit" do
    it "assigns the requested question_scan_procedure as @question_scan_procedure" do
      QuestionScanProcedure.stub(:find).with("37") { mock_question_scan_procedure }
      get :edit, :id => "37"
      assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created question_scan_procedure as @question_scan_procedure" do
        QuestionScanProcedure.stub(:new).with({'these' => 'params'}) { mock_question_scan_procedure(:save => true) }
        post :create, :question_scan_procedure => {'these' => 'params'}
        assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
      end

      it "redirects to the created question_scan_procedure" do
        QuestionScanProcedure.stub(:new) { mock_question_scan_procedure(:save => true) }
        post :create, :question_scan_procedure => {}
        response.should redirect_to(question_scan_procedure_url(mock_question_scan_procedure))
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved question_scan_procedure as @question_scan_procedure" do
        QuestionScanProcedure.stub(:new).with({'these' => 'params'}) { mock_question_scan_procedure(:save => false) }
        post :create, :question_scan_procedure => {'these' => 'params'}
        assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
      end

      it "re-renders the 'new' template" do
        QuestionScanProcedure.stub(:new) { mock_question_scan_procedure(:save => false) }
        post :create, :question_scan_procedure => {}
        response.should render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      it "updates the requested question_scan_procedure" do
        QuestionScanProcedure.stub(:find).with("37") { mock_question_scan_procedure }
        mock_question_scan_procedure.should_receive(:update_attributes).with({'these' => 'params'})
        put :update, :id => "37", :question_scan_procedure => {'these' => 'params'}
      end

      it "assigns the requested question_scan_procedure as @question_scan_procedure" do
        QuestionScanProcedure.stub(:find) { mock_question_scan_procedure(:update_attributes => true) }
        put :update, :id => "1"
        assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
      end

      it "redirects to the question_scan_procedure" do
        QuestionScanProcedure.stub(:find) { mock_question_scan_procedure(:update_attributes => true) }
        put :update, :id => "1"
        response.should redirect_to(question_scan_procedure_url(mock_question_scan_procedure))
      end
    end

    describe "with invalid params" do
      it "assigns the question_scan_procedure as @question_scan_procedure" do
        QuestionScanProcedure.stub(:find) { mock_question_scan_procedure(:update_attributes => false) }
        put :update, :id => "1"
        assigns(:question_scan_procedure).should be(mock_question_scan_procedure)
      end

      it "re-renders the 'edit' template" do
        QuestionScanProcedure.stub(:find) { mock_question_scan_procedure(:update_attributes => false) }
        put :update, :id => "1"
        response.should render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested question_scan_procedure" do
      QuestionScanProcedure.stub(:find).with("37") { mock_question_scan_procedure }
      mock_question_scan_procedure.should_receive(:destroy)
      delete :destroy, :id => "37"
    end

    it "redirects to the question_scan_procedures list" do
      QuestionScanProcedure.stub(:find) { mock_question_scan_procedure }
      delete :destroy, :id => "1"
      response.should redirect_to(question_scan_procedures_url)
    end
  end

end
